{"version":3,"sources":["../src/index.js"],"names":["objectAssign","require","genActions","bindContext","methods","context","target","store","$axios","result","key","bind","createAsyncDataFunction","component","originalAsyncData","data","mixins","idx","mixin","asyncData","r","apply","createFetchFunction","originalFetch","fetch","mergeMethods","forEach","nuxtend","actions","act","funcs","name","module","exports","com"],"mappings":"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","file":"index.js","sourcesContent":["const objectAssign = require('object-assign')\nconst genActions = require('./genactions')\n\nfunction bindContext (methods, context) {\n  const target = {'$store': context.store, '$axios': context.$axios}\n  const result = {}\n  for (let key in methods) {\n    result[key] = methods[key].bind(target)\n  }\n  return result\n}\n\nfunction createAsyncDataFunction (component, originalAsyncData, methods) {\n  return async (context) => {\n    let data = {}\n    for (let idx in component.mixins) {\n      let mixin = component.mixins[idx]\n      if (typeof mixin.asyncData !== 'undefined') {\n        let r = await mixin.asyncData(context)\n        objectAssign(data, r)\n      }\n    }\n    let target = {}\n    objectAssign(target, bindContext(methods, context))\n    let r = await originalAsyncData.apply(target, [context])\n    objectAssign(data, r)\n    return data\n  }\n}\n\nfunction createFetchFunction (component, originalFetch, methods) {\n  return async (context) => {\n    for (let idx in component.mixins) {\n      let mixin = component.mixins[idx]\n      if (typeof mixin.fetch !== 'undefined') {\n        await mixin.fetch(context)\n      }\n    }\n    let target = {}\n    objectAssign(target, bindContext(methods, context))\n    await originalFetch.apply(target, [context])\n  }\n}\n\nfunction mergeMethods (component) {\n  let methods = {}\n  if (component.mixins) {\n    component.mixins.forEach(mixin => {\n      if (mixin.methods) {\n        objectAssign(methods, mixin.methods)\n      }\n    })\n  }\n  if (component.methods) {\n    objectAssign(methods, component.methods)\n  }\n  if (component.nuxtend && component.nuxtend.actions) {\n    for (let act of component.nuxtend.actions) {\n      const funcs = genActions({}, act)\n      for (let name in funcs) {\n        if (typeof methods[name] === 'undefined') {\n          methods[name] = funcs[name]\n        }\n      }\n    }\n  }\n  return methods\n}\n\nmodule.exports = function (component) {\n  let com = objectAssign(component)\n  let {asyncData, fetch} = com\n  const methods = mergeMethods(com)\n  if (fetch) {\n    com.fetch = createFetchFunction(com, fetch, methods)\n  }\n  if (asyncData) {\n    com.asyncData = createAsyncDataFunction(com, asyncData, methods)\n  }\n  com.methods = methods\n  return com\n}\n\n"]}